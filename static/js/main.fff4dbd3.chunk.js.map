{"version":3,"sources":["components/Datatable.js","App.js","index.js"],"names":["Datatable","data","columns","Object","keys","cellPadding","cellSpacing","map","heading","row","column","require","polyfill","App","useState","setData","q","setQ","searchColumns","setSearchColumns","useEffect","fetch","then","response","json","className","type","value","onChange","e","target","checked","includes","prev","filter","sc","rows","criteria","toLowerCase","some","toString","indexOf","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAoBeA,EAnBG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACVC,EAAUD,EAAK,IAAME,OAAOC,KAAKH,EAAK,IAE5C,OACI,wBAAOI,YAAa,EAAGC,YAAa,EAApC,UACI,gCACI,6BACKL,EAAK,IAAMC,EAAQK,KAAI,SAACC,GAAD,OAAa,6BAAKA,WAGlD,gCACKP,EAAKM,KAAI,SAAAE,GAAG,OAAI,6BACZP,EAAQK,KAAI,SAAAG,GAAM,OAAI,6BAAKD,EAAIC,mB,MCRpDC,EAAQ,IAAeC,WACvBD,EAAQ,IAER,IAyDeE,EAzDH,WACV,MAAwBC,oBAAS,WAAQ,MAAO,MAAhD,mBAAOb,EAAP,KAAac,EAAb,KACA,EAAkBD,oBAAS,WAAQ,MAAO,MAA1C,mBAAOE,EAAP,KAAUC,EAAV,KAGA,EAA0CH,oBAAS,WACjD,MAAO,CAAC,QAAS,WADnB,mBAAOI,EAAP,KAAsBC,EAAtB,KAIAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIT,EAAQS,QACvB,IAEH,IAaMtB,EAAUD,EAAK,IAAME,OAAOC,KAAKH,EAAK,IAE5C,OACE,sBAAKwB,UAAU,MAAf,UACE,gCACE,uBAAOC,KAAK,OAAOC,MAAOX,EAAGY,SAAU,SAACC,GAAD,OAAOZ,EAAKY,EAAEC,OAAOH,UAE1DzB,GAAWA,EAAQK,KAAI,SAAAG,GAAM,OAC3B,kCACE,uBAAOgB,KAAK,WAAWK,QAASb,EAAcc,SAAStB,GACvDkB,SAAU,SAACC,GACT,IAAME,EAAUb,EAAcc,SAAStB,GACvCS,GAAiB,SAACc,GAAD,OACfF,EACEE,EAAKC,QAAO,SAACC,GAAD,OAAQA,IAAOzB,KADtB,sBAEDuB,GAFC,CAEKvB,UAGfA,WAIT,8BACE,cAAC,EAAD,CAAWT,KApCF,SAACmC,GACd,IAAMC,EAAWrB,EAAEsB,cAInB,OAAOF,EAAKF,QAAO,SAACzB,GAAD,OAASS,EAAcqB,MAAK,SAAC7B,GAAD,OAAYD,EAAIC,GAAQ8B,WAAWF,cAAcG,QAAQJ,IAAa,QA+BhGK,CAAOzC,WCtDhC0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fff4dbd3.chunk.js","sourcesContent":["\r\nconst Datatable = ({data}) => {\r\n    const columns = data[0] && Object.keys(data[0]);\r\n\r\n    return (\r\n        <table cellPadding={0} cellSpacing={0}>\r\n            <thead>\r\n                <tr>\r\n                    {data[0] && columns.map((heading) => <th>{heading}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {data.map(row => <tr>\r\n                    {columns.map(column => <td>{row[column]}</td>)}\r\n                </tr>)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Datatable\r\n","import React, {useState, useEffect } from 'react';\nimport Datatable from './components/Datatable'\n\nimport './App.css';\n\nrequire(\"es6-promise\").polyfill();\nrequire(\"isomorphic-fetch\");\n\nconst App = () => {\n  const [data, setData] = useState(() => { return []; });\n  const [q, setQ] = useState(() => { return \"\"; });\n\n  //set what columns to search on\n  const [searchColumns, setSearchColumns] = useState(() => {\n    return [\"title\", \"body\"];\n  })\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => response.json())\n      .then(json => setData(json));\n  }, []);\n\n  const search = (rows) => {\n    const criteria = q.toLowerCase();\n    // const columns = rows[0] && Object.keys(rows[0]);\n    // return rows.filter((row) => columns.some((column) => row[column].toString().toLowerCase().indexOf(criteria) > -1));\n\n    return rows.filter((row) => searchColumns.some((column) => row[column].toString().toLowerCase().indexOf(criteria) > -1));\n\n    // return rows.filter(row => \n    //     row.title.toLowerCase().indexOf(criteria) > -1 ||\n    //     row.body.toLowerCase().indexOf(criteria) > -1\n    // );\n  }\n\n  const columns = data[0] && Object.keys(data[0]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input type=\"text\" value={q} onChange={(e) => setQ(e.target.value)}></input>\n        {\n          columns && columns.map(column => \n            <label>\n              <input type=\"checkbox\" checked={searchColumns.includes(column)}\n              onChange={(e) => {\n                const checked = searchColumns.includes(column);\n                setSearchColumns((prev) =>\n                  checked\n                  ? prev.filter((sc) => sc !== column)\n                  : [...prev, column]\n                );\n              }}/>\n              {column}\n            </label>)\n        }\n      </div>\n      <div>\n        <Datatable data={search(data)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}